/*
SnapTrade

Connect brokerage accounts to your app for live positions and trading

API version: 1.0.0
Contact: api@snaptrade.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package snaptrade

import (
	"encoding/json"
)

// OptionChainInnerChainPerRootInner struct for OptionChainInnerChainPerRootInner
type OptionChainInnerChainPerRootInner struct {
	OptionRoot *string `json:"optionRoot,omitempty"`
	ChainPerStrikePrice []OptionChainInnerChainPerRootInnerChainPerStrikePriceInner `json:"chainPerStrikePrice,omitempty"`
	Multiplier *int32 `json:"multiplier,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OptionChainInnerChainPerRootInner OptionChainInnerChainPerRootInner

// NewOptionChainInnerChainPerRootInner instantiates a new OptionChainInnerChainPerRootInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionChainInnerChainPerRootInner() *OptionChainInnerChainPerRootInner {
	this := OptionChainInnerChainPerRootInner{}
	return &this
}

// NewOptionChainInnerChainPerRootInnerWithDefaults instantiates a new OptionChainInnerChainPerRootInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionChainInnerChainPerRootInnerWithDefaults() *OptionChainInnerChainPerRootInner {
	this := OptionChainInnerChainPerRootInner{}
	return &this
}

// GetOptionRoot returns the OptionRoot field value if set, zero value otherwise.
func (o *OptionChainInnerChainPerRootInner) GetOptionRoot() string {
	if o == nil || isNil(o.OptionRoot) {
		var ret string
		return ret
	}
	return *o.OptionRoot
}

// GetOptionRootOk returns a tuple with the OptionRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionChainInnerChainPerRootInner) GetOptionRootOk() (*string, bool) {
	if o == nil || isNil(o.OptionRoot) {
    return nil, false
	}
	return o.OptionRoot, true
}

// HasOptionRoot returns a boolean if a field has been set.
func (o *OptionChainInnerChainPerRootInner) HasOptionRoot() bool {
	if o != nil && !isNil(o.OptionRoot) {
		return true
	}

	return false
}

// SetOptionRoot gets a reference to the given string and assigns it to the OptionRoot field.
func (o *OptionChainInnerChainPerRootInner) SetOptionRoot(v string) {
	o.OptionRoot = &v
}

// GetChainPerStrikePrice returns the ChainPerStrikePrice field value if set, zero value otherwise.
func (o *OptionChainInnerChainPerRootInner) GetChainPerStrikePrice() []OptionChainInnerChainPerRootInnerChainPerStrikePriceInner {
	if o == nil || isNil(o.ChainPerStrikePrice) {
		var ret []OptionChainInnerChainPerRootInnerChainPerStrikePriceInner
		return ret
	}
	return o.ChainPerStrikePrice
}

// GetChainPerStrikePriceOk returns a tuple with the ChainPerStrikePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionChainInnerChainPerRootInner) GetChainPerStrikePriceOk() ([]OptionChainInnerChainPerRootInnerChainPerStrikePriceInner, bool) {
	if o == nil || isNil(o.ChainPerStrikePrice) {
    return nil, false
	}
	return o.ChainPerStrikePrice, true
}

// HasChainPerStrikePrice returns a boolean if a field has been set.
func (o *OptionChainInnerChainPerRootInner) HasChainPerStrikePrice() bool {
	if o != nil && !isNil(o.ChainPerStrikePrice) {
		return true
	}

	return false
}

// SetChainPerStrikePrice gets a reference to the given []OptionChainInnerChainPerRootInnerChainPerStrikePriceInner and assigns it to the ChainPerStrikePrice field.
func (o *OptionChainInnerChainPerRootInner) SetChainPerStrikePrice(v []OptionChainInnerChainPerRootInnerChainPerStrikePriceInner) {
	o.ChainPerStrikePrice = v
}

// GetMultiplier returns the Multiplier field value if set, zero value otherwise.
func (o *OptionChainInnerChainPerRootInner) GetMultiplier() int32 {
	if o == nil || isNil(o.Multiplier) {
		var ret int32
		return ret
	}
	return *o.Multiplier
}

// GetMultiplierOk returns a tuple with the Multiplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionChainInnerChainPerRootInner) GetMultiplierOk() (*int32, bool) {
	if o == nil || isNil(o.Multiplier) {
    return nil, false
	}
	return o.Multiplier, true
}

// HasMultiplier returns a boolean if a field has been set.
func (o *OptionChainInnerChainPerRootInner) HasMultiplier() bool {
	if o != nil && !isNil(o.Multiplier) {
		return true
	}

	return false
}

// SetMultiplier gets a reference to the given int32 and assigns it to the Multiplier field.
func (o *OptionChainInnerChainPerRootInner) SetMultiplier(v int32) {
	o.Multiplier = &v
}

func (o OptionChainInnerChainPerRootInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.OptionRoot) {
		toSerialize["optionRoot"] = o.OptionRoot
	}
	if !isNil(o.ChainPerStrikePrice) {
		toSerialize["chainPerStrikePrice"] = o.ChainPerStrikePrice
	}
	if !isNil(o.Multiplier) {
		toSerialize["multiplier"] = o.Multiplier
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *OptionChainInnerChainPerRootInner) UnmarshalJSON(bytes []byte) (err error) {
	varOptionChainInnerChainPerRootInner := _OptionChainInnerChainPerRootInner{}

	if err = json.Unmarshal(bytes, &varOptionChainInnerChainPerRootInner); err == nil {
		*o = OptionChainInnerChainPerRootInner(varOptionChainInnerChainPerRootInner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "optionRoot")
		delete(additionalProperties, "chainPerStrikePrice")
		delete(additionalProperties, "multiplier")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOptionChainInnerChainPerRootInner struct {
	value *OptionChainInnerChainPerRootInner
	isSet bool
}

func (v NullableOptionChainInnerChainPerRootInner) Get() *OptionChainInnerChainPerRootInner {
	return v.value
}

func (v *NullableOptionChainInnerChainPerRootInner) Set(val *OptionChainInnerChainPerRootInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionChainInnerChainPerRootInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionChainInnerChainPerRootInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionChainInnerChainPerRootInner(val *OptionChainInnerChainPerRootInner) *NullableOptionChainInnerChainPerRootInner {
	return &NullableOptionChainInnerChainPerRootInner{value: val, isSet: true}
}

func (v NullableOptionChainInnerChainPerRootInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionChainInnerChainPerRootInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


