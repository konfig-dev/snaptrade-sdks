/*
SnapTrade

Connect brokerage accounts to your app for live positions and trading

API version: 1.0.0
Contact: api@snaptrade.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package snaptrade

import (
	"encoding/json"
)

// StrategyOrderPlaceOrdersInner struct for StrategyOrderPlaceOrdersInner
type StrategyOrderPlaceOrdersInner struct {
	Id *int32 `json:"id,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	SymbolId *int32 `json:"symbolId,omitempty"`
	TotalQuantity *int32 `json:"totalQuantity,omitempty"`
	OpenQuantity *int32 `json:"openQuantity,omitempty"`
	FilledQuantity *int32 `json:"filledQuantity,omitempty"`
	CanceledQuantity *int32 `json:"canceledQuantity,omitempty"`
	Side *string `json:"side,omitempty"`
	OrderType *string `json:"orderType,omitempty"`
	LimitPrice *string `json:"limitPrice,omitempty"`
	StopPrice *string `json:"stopPrice,omitempty"`
	IsAllOrNone *bool `json:"isAllOrNone,omitempty"`
	IsAnonymous *bool `json:"isAnonymous,omitempty"`
	IcebergQuantity *string `json:"icebergQuantity,omitempty"`
	MinQuantity *string `json:"minQuantity,omitempty"`
	AvgExecPrice *int32 `json:"avgExecPrice,omitempty"`
	LastExecPrice *string `json:"lastExecPrice,omitempty"`
	Source *string `json:"source,omitempty"`
	TimeInForce *string `json:"timeInForce,omitempty"`
	GtdDate *string `json:"gtdDate,omitempty"`
	State *string `json:"state,omitempty"`
	RejectionReason *string `json:"rejectionReason,omitempty"`
	ChainId *int32 `json:"chainId,omitempty"`
	CreationTime *string `json:"creationTime,omitempty"`
	UpdateTime *string `json:"updateTime,omitempty"`
	Notes *string `json:"notes,omitempty"`
	PrimaryRoute *string `json:"primaryRoute,omitempty"`
	SecondaryRoute *string `json:"secondaryRoute,omitempty"`
	OrderRoute *string `json:"orderRoute,omitempty"`
	VenueHoldingOrder *string `json:"venueHoldingOrder,omitempty"`
	ComissionCharged *int32 `json:"comissionCharged,omitempty"`
	ExchangeOrderId *string `json:"exchangeOrderId,omitempty"`
	IsSignificantShareHolder *bool `json:"isSignificantShareHolder,omitempty"`
	IsInsider *bool `json:"isInsider,omitempty"`
	IsLimitOffsetInDollar *bool `json:"isLimitOffsetInDollar,omitempty"`
	UserId *int32 `json:"userId,omitempty"`
	PlacementCommission *string `json:"placementCommission,omitempty"`
	Legs []StrategyOrderPlaceOrdersInnerLegsInner `json:"legs,omitempty"`
	StrategyType *string `json:"strategyType,omitempty"`
	TriggerStopPrice *string `json:"triggerStopPrice,omitempty"`
	OrderGroupId *int32 `json:"orderGroupId,omitempty"`
	OrderClass *string `json:"orderClass,omitempty"`
	IsCrossZero *bool `json:"isCrossZero,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StrategyOrderPlaceOrdersInner StrategyOrderPlaceOrdersInner

// NewStrategyOrderPlaceOrdersInner instantiates a new StrategyOrderPlaceOrdersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStrategyOrderPlaceOrdersInner() *StrategyOrderPlaceOrdersInner {
	this := StrategyOrderPlaceOrdersInner{}
	return &this
}

// NewStrategyOrderPlaceOrdersInnerWithDefaults instantiates a new StrategyOrderPlaceOrdersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStrategyOrderPlaceOrdersInnerWithDefaults() *StrategyOrderPlaceOrdersInner {
	this := StrategyOrderPlaceOrdersInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *StrategyOrderPlaceOrdersInner) SetId(v int32) {
	o.Id = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetSymbol() string {
	if o == nil || isNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetSymbolOk() (*string, bool) {
	if o == nil || isNil(o.Symbol) {
    return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasSymbol() bool {
	if o != nil && !isNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *StrategyOrderPlaceOrdersInner) SetSymbol(v string) {
	o.Symbol = &v
}

// GetSymbolId returns the SymbolId field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetSymbolId() int32 {
	if o == nil || isNil(o.SymbolId) {
		var ret int32
		return ret
	}
	return *o.SymbolId
}

// GetSymbolIdOk returns a tuple with the SymbolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetSymbolIdOk() (*int32, bool) {
	if o == nil || isNil(o.SymbolId) {
    return nil, false
	}
	return o.SymbolId, true
}

// HasSymbolId returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasSymbolId() bool {
	if o != nil && !isNil(o.SymbolId) {
		return true
	}

	return false
}

// SetSymbolId gets a reference to the given int32 and assigns it to the SymbolId field.
func (o *StrategyOrderPlaceOrdersInner) SetSymbolId(v int32) {
	o.SymbolId = &v
}

// GetTotalQuantity returns the TotalQuantity field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetTotalQuantity() int32 {
	if o == nil || isNil(o.TotalQuantity) {
		var ret int32
		return ret
	}
	return *o.TotalQuantity
}

// GetTotalQuantityOk returns a tuple with the TotalQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetTotalQuantityOk() (*int32, bool) {
	if o == nil || isNil(o.TotalQuantity) {
    return nil, false
	}
	return o.TotalQuantity, true
}

// HasTotalQuantity returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasTotalQuantity() bool {
	if o != nil && !isNil(o.TotalQuantity) {
		return true
	}

	return false
}

// SetTotalQuantity gets a reference to the given int32 and assigns it to the TotalQuantity field.
func (o *StrategyOrderPlaceOrdersInner) SetTotalQuantity(v int32) {
	o.TotalQuantity = &v
}

// GetOpenQuantity returns the OpenQuantity field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetOpenQuantity() int32 {
	if o == nil || isNil(o.OpenQuantity) {
		var ret int32
		return ret
	}
	return *o.OpenQuantity
}

// GetOpenQuantityOk returns a tuple with the OpenQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetOpenQuantityOk() (*int32, bool) {
	if o == nil || isNil(o.OpenQuantity) {
    return nil, false
	}
	return o.OpenQuantity, true
}

// HasOpenQuantity returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasOpenQuantity() bool {
	if o != nil && !isNil(o.OpenQuantity) {
		return true
	}

	return false
}

// SetOpenQuantity gets a reference to the given int32 and assigns it to the OpenQuantity field.
func (o *StrategyOrderPlaceOrdersInner) SetOpenQuantity(v int32) {
	o.OpenQuantity = &v
}

// GetFilledQuantity returns the FilledQuantity field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetFilledQuantity() int32 {
	if o == nil || isNil(o.FilledQuantity) {
		var ret int32
		return ret
	}
	return *o.FilledQuantity
}

// GetFilledQuantityOk returns a tuple with the FilledQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetFilledQuantityOk() (*int32, bool) {
	if o == nil || isNil(o.FilledQuantity) {
    return nil, false
	}
	return o.FilledQuantity, true
}

// HasFilledQuantity returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasFilledQuantity() bool {
	if o != nil && !isNil(o.FilledQuantity) {
		return true
	}

	return false
}

// SetFilledQuantity gets a reference to the given int32 and assigns it to the FilledQuantity field.
func (o *StrategyOrderPlaceOrdersInner) SetFilledQuantity(v int32) {
	o.FilledQuantity = &v
}

// GetCanceledQuantity returns the CanceledQuantity field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetCanceledQuantity() int32 {
	if o == nil || isNil(o.CanceledQuantity) {
		var ret int32
		return ret
	}
	return *o.CanceledQuantity
}

// GetCanceledQuantityOk returns a tuple with the CanceledQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetCanceledQuantityOk() (*int32, bool) {
	if o == nil || isNil(o.CanceledQuantity) {
    return nil, false
	}
	return o.CanceledQuantity, true
}

// HasCanceledQuantity returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasCanceledQuantity() bool {
	if o != nil && !isNil(o.CanceledQuantity) {
		return true
	}

	return false
}

// SetCanceledQuantity gets a reference to the given int32 and assigns it to the CanceledQuantity field.
func (o *StrategyOrderPlaceOrdersInner) SetCanceledQuantity(v int32) {
	o.CanceledQuantity = &v
}

// GetSide returns the Side field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetSide() string {
	if o == nil || isNil(o.Side) {
		var ret string
		return ret
	}
	return *o.Side
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetSideOk() (*string, bool) {
	if o == nil || isNil(o.Side) {
    return nil, false
	}
	return o.Side, true
}

// HasSide returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasSide() bool {
	if o != nil && !isNil(o.Side) {
		return true
	}

	return false
}

// SetSide gets a reference to the given string and assigns it to the Side field.
func (o *StrategyOrderPlaceOrdersInner) SetSide(v string) {
	o.Side = &v
}

// GetOrderType returns the OrderType field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetOrderType() string {
	if o == nil || isNil(o.OrderType) {
		var ret string
		return ret
	}
	return *o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetOrderTypeOk() (*string, bool) {
	if o == nil || isNil(o.OrderType) {
    return nil, false
	}
	return o.OrderType, true
}

// HasOrderType returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasOrderType() bool {
	if o != nil && !isNil(o.OrderType) {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given string and assigns it to the OrderType field.
func (o *StrategyOrderPlaceOrdersInner) SetOrderType(v string) {
	o.OrderType = &v
}

// GetLimitPrice returns the LimitPrice field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetLimitPrice() string {
	if o == nil || isNil(o.LimitPrice) {
		var ret string
		return ret
	}
	return *o.LimitPrice
}

// GetLimitPriceOk returns a tuple with the LimitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetLimitPriceOk() (*string, bool) {
	if o == nil || isNil(o.LimitPrice) {
    return nil, false
	}
	return o.LimitPrice, true
}

// HasLimitPrice returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasLimitPrice() bool {
	if o != nil && !isNil(o.LimitPrice) {
		return true
	}

	return false
}

// SetLimitPrice gets a reference to the given string and assigns it to the LimitPrice field.
func (o *StrategyOrderPlaceOrdersInner) SetLimitPrice(v string) {
	o.LimitPrice = &v
}

// GetStopPrice returns the StopPrice field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetStopPrice() string {
	if o == nil || isNil(o.StopPrice) {
		var ret string
		return ret
	}
	return *o.StopPrice
}

// GetStopPriceOk returns a tuple with the StopPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetStopPriceOk() (*string, bool) {
	if o == nil || isNil(o.StopPrice) {
    return nil, false
	}
	return o.StopPrice, true
}

// HasStopPrice returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasStopPrice() bool {
	if o != nil && !isNil(o.StopPrice) {
		return true
	}

	return false
}

// SetStopPrice gets a reference to the given string and assigns it to the StopPrice field.
func (o *StrategyOrderPlaceOrdersInner) SetStopPrice(v string) {
	o.StopPrice = &v
}

// GetIsAllOrNone returns the IsAllOrNone field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetIsAllOrNone() bool {
	if o == nil || isNil(o.IsAllOrNone) {
		var ret bool
		return ret
	}
	return *o.IsAllOrNone
}

// GetIsAllOrNoneOk returns a tuple with the IsAllOrNone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetIsAllOrNoneOk() (*bool, bool) {
	if o == nil || isNil(o.IsAllOrNone) {
    return nil, false
	}
	return o.IsAllOrNone, true
}

// HasIsAllOrNone returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasIsAllOrNone() bool {
	if o != nil && !isNil(o.IsAllOrNone) {
		return true
	}

	return false
}

// SetIsAllOrNone gets a reference to the given bool and assigns it to the IsAllOrNone field.
func (o *StrategyOrderPlaceOrdersInner) SetIsAllOrNone(v bool) {
	o.IsAllOrNone = &v
}

// GetIsAnonymous returns the IsAnonymous field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetIsAnonymous() bool {
	if o == nil || isNil(o.IsAnonymous) {
		var ret bool
		return ret
	}
	return *o.IsAnonymous
}

// GetIsAnonymousOk returns a tuple with the IsAnonymous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetIsAnonymousOk() (*bool, bool) {
	if o == nil || isNil(o.IsAnonymous) {
    return nil, false
	}
	return o.IsAnonymous, true
}

// HasIsAnonymous returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasIsAnonymous() bool {
	if o != nil && !isNil(o.IsAnonymous) {
		return true
	}

	return false
}

// SetIsAnonymous gets a reference to the given bool and assigns it to the IsAnonymous field.
func (o *StrategyOrderPlaceOrdersInner) SetIsAnonymous(v bool) {
	o.IsAnonymous = &v
}

// GetIcebergQuantity returns the IcebergQuantity field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetIcebergQuantity() string {
	if o == nil || isNil(o.IcebergQuantity) {
		var ret string
		return ret
	}
	return *o.IcebergQuantity
}

// GetIcebergQuantityOk returns a tuple with the IcebergQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetIcebergQuantityOk() (*string, bool) {
	if o == nil || isNil(o.IcebergQuantity) {
    return nil, false
	}
	return o.IcebergQuantity, true
}

// HasIcebergQuantity returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasIcebergQuantity() bool {
	if o != nil && !isNil(o.IcebergQuantity) {
		return true
	}

	return false
}

// SetIcebergQuantity gets a reference to the given string and assigns it to the IcebergQuantity field.
func (o *StrategyOrderPlaceOrdersInner) SetIcebergQuantity(v string) {
	o.IcebergQuantity = &v
}

// GetMinQuantity returns the MinQuantity field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetMinQuantity() string {
	if o == nil || isNil(o.MinQuantity) {
		var ret string
		return ret
	}
	return *o.MinQuantity
}

// GetMinQuantityOk returns a tuple with the MinQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetMinQuantityOk() (*string, bool) {
	if o == nil || isNil(o.MinQuantity) {
    return nil, false
	}
	return o.MinQuantity, true
}

// HasMinQuantity returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasMinQuantity() bool {
	if o != nil && !isNil(o.MinQuantity) {
		return true
	}

	return false
}

// SetMinQuantity gets a reference to the given string and assigns it to the MinQuantity field.
func (o *StrategyOrderPlaceOrdersInner) SetMinQuantity(v string) {
	o.MinQuantity = &v
}

// GetAvgExecPrice returns the AvgExecPrice field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetAvgExecPrice() int32 {
	if o == nil || isNil(o.AvgExecPrice) {
		var ret int32
		return ret
	}
	return *o.AvgExecPrice
}

// GetAvgExecPriceOk returns a tuple with the AvgExecPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetAvgExecPriceOk() (*int32, bool) {
	if o == nil || isNil(o.AvgExecPrice) {
    return nil, false
	}
	return o.AvgExecPrice, true
}

// HasAvgExecPrice returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasAvgExecPrice() bool {
	if o != nil && !isNil(o.AvgExecPrice) {
		return true
	}

	return false
}

// SetAvgExecPrice gets a reference to the given int32 and assigns it to the AvgExecPrice field.
func (o *StrategyOrderPlaceOrdersInner) SetAvgExecPrice(v int32) {
	o.AvgExecPrice = &v
}

// GetLastExecPrice returns the LastExecPrice field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetLastExecPrice() string {
	if o == nil || isNil(o.LastExecPrice) {
		var ret string
		return ret
	}
	return *o.LastExecPrice
}

// GetLastExecPriceOk returns a tuple with the LastExecPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetLastExecPriceOk() (*string, bool) {
	if o == nil || isNil(o.LastExecPrice) {
    return nil, false
	}
	return o.LastExecPrice, true
}

// HasLastExecPrice returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasLastExecPrice() bool {
	if o != nil && !isNil(o.LastExecPrice) {
		return true
	}

	return false
}

// SetLastExecPrice gets a reference to the given string and assigns it to the LastExecPrice field.
func (o *StrategyOrderPlaceOrdersInner) SetLastExecPrice(v string) {
	o.LastExecPrice = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetSource() string {
	if o == nil || isNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetSourceOk() (*string, bool) {
	if o == nil || isNil(o.Source) {
    return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasSource() bool {
	if o != nil && !isNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *StrategyOrderPlaceOrdersInner) SetSource(v string) {
	o.Source = &v
}

// GetTimeInForce returns the TimeInForce field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetTimeInForce() string {
	if o == nil || isNil(o.TimeInForce) {
		var ret string
		return ret
	}
	return *o.TimeInForce
}

// GetTimeInForceOk returns a tuple with the TimeInForce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetTimeInForceOk() (*string, bool) {
	if o == nil || isNil(o.TimeInForce) {
    return nil, false
	}
	return o.TimeInForce, true
}

// HasTimeInForce returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasTimeInForce() bool {
	if o != nil && !isNil(o.TimeInForce) {
		return true
	}

	return false
}

// SetTimeInForce gets a reference to the given string and assigns it to the TimeInForce field.
func (o *StrategyOrderPlaceOrdersInner) SetTimeInForce(v string) {
	o.TimeInForce = &v
}

// GetGtdDate returns the GtdDate field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetGtdDate() string {
	if o == nil || isNil(o.GtdDate) {
		var ret string
		return ret
	}
	return *o.GtdDate
}

// GetGtdDateOk returns a tuple with the GtdDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetGtdDateOk() (*string, bool) {
	if o == nil || isNil(o.GtdDate) {
    return nil, false
	}
	return o.GtdDate, true
}

// HasGtdDate returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasGtdDate() bool {
	if o != nil && !isNil(o.GtdDate) {
		return true
	}

	return false
}

// SetGtdDate gets a reference to the given string and assigns it to the GtdDate field.
func (o *StrategyOrderPlaceOrdersInner) SetGtdDate(v string) {
	o.GtdDate = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetState() string {
	if o == nil || isNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetStateOk() (*string, bool) {
	if o == nil || isNil(o.State) {
    return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasState() bool {
	if o != nil && !isNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *StrategyOrderPlaceOrdersInner) SetState(v string) {
	o.State = &v
}

// GetRejectionReason returns the RejectionReason field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetRejectionReason() string {
	if o == nil || isNil(o.RejectionReason) {
		var ret string
		return ret
	}
	return *o.RejectionReason
}

// GetRejectionReasonOk returns a tuple with the RejectionReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetRejectionReasonOk() (*string, bool) {
	if o == nil || isNil(o.RejectionReason) {
    return nil, false
	}
	return o.RejectionReason, true
}

// HasRejectionReason returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasRejectionReason() bool {
	if o != nil && !isNil(o.RejectionReason) {
		return true
	}

	return false
}

// SetRejectionReason gets a reference to the given string and assigns it to the RejectionReason field.
func (o *StrategyOrderPlaceOrdersInner) SetRejectionReason(v string) {
	o.RejectionReason = &v
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetChainId() int32 {
	if o == nil || isNil(o.ChainId) {
		var ret int32
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetChainIdOk() (*int32, bool) {
	if o == nil || isNil(o.ChainId) {
    return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasChainId() bool {
	if o != nil && !isNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given int32 and assigns it to the ChainId field.
func (o *StrategyOrderPlaceOrdersInner) SetChainId(v int32) {
	o.ChainId = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetCreationTime() string {
	if o == nil || isNil(o.CreationTime) {
		var ret string
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetCreationTimeOk() (*string, bool) {
	if o == nil || isNil(o.CreationTime) {
    return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasCreationTime() bool {
	if o != nil && !isNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given string and assigns it to the CreationTime field.
func (o *StrategyOrderPlaceOrdersInner) SetCreationTime(v string) {
	o.CreationTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetUpdateTime() string {
	if o == nil || isNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetUpdateTimeOk() (*string, bool) {
	if o == nil || isNil(o.UpdateTime) {
    return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasUpdateTime() bool {
	if o != nil && !isNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *StrategyOrderPlaceOrdersInner) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetNotes() string {
	if o == nil || isNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetNotesOk() (*string, bool) {
	if o == nil || isNil(o.Notes) {
    return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasNotes() bool {
	if o != nil && !isNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *StrategyOrderPlaceOrdersInner) SetNotes(v string) {
	o.Notes = &v
}

// GetPrimaryRoute returns the PrimaryRoute field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetPrimaryRoute() string {
	if o == nil || isNil(o.PrimaryRoute) {
		var ret string
		return ret
	}
	return *o.PrimaryRoute
}

// GetPrimaryRouteOk returns a tuple with the PrimaryRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetPrimaryRouteOk() (*string, bool) {
	if o == nil || isNil(o.PrimaryRoute) {
    return nil, false
	}
	return o.PrimaryRoute, true
}

// HasPrimaryRoute returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasPrimaryRoute() bool {
	if o != nil && !isNil(o.PrimaryRoute) {
		return true
	}

	return false
}

// SetPrimaryRoute gets a reference to the given string and assigns it to the PrimaryRoute field.
func (o *StrategyOrderPlaceOrdersInner) SetPrimaryRoute(v string) {
	o.PrimaryRoute = &v
}

// GetSecondaryRoute returns the SecondaryRoute field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetSecondaryRoute() string {
	if o == nil || isNil(o.SecondaryRoute) {
		var ret string
		return ret
	}
	return *o.SecondaryRoute
}

// GetSecondaryRouteOk returns a tuple with the SecondaryRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetSecondaryRouteOk() (*string, bool) {
	if o == nil || isNil(o.SecondaryRoute) {
    return nil, false
	}
	return o.SecondaryRoute, true
}

// HasSecondaryRoute returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasSecondaryRoute() bool {
	if o != nil && !isNil(o.SecondaryRoute) {
		return true
	}

	return false
}

// SetSecondaryRoute gets a reference to the given string and assigns it to the SecondaryRoute field.
func (o *StrategyOrderPlaceOrdersInner) SetSecondaryRoute(v string) {
	o.SecondaryRoute = &v
}

// GetOrderRoute returns the OrderRoute field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetOrderRoute() string {
	if o == nil || isNil(o.OrderRoute) {
		var ret string
		return ret
	}
	return *o.OrderRoute
}

// GetOrderRouteOk returns a tuple with the OrderRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetOrderRouteOk() (*string, bool) {
	if o == nil || isNil(o.OrderRoute) {
    return nil, false
	}
	return o.OrderRoute, true
}

// HasOrderRoute returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasOrderRoute() bool {
	if o != nil && !isNil(o.OrderRoute) {
		return true
	}

	return false
}

// SetOrderRoute gets a reference to the given string and assigns it to the OrderRoute field.
func (o *StrategyOrderPlaceOrdersInner) SetOrderRoute(v string) {
	o.OrderRoute = &v
}

// GetVenueHoldingOrder returns the VenueHoldingOrder field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetVenueHoldingOrder() string {
	if o == nil || isNil(o.VenueHoldingOrder) {
		var ret string
		return ret
	}
	return *o.VenueHoldingOrder
}

// GetVenueHoldingOrderOk returns a tuple with the VenueHoldingOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetVenueHoldingOrderOk() (*string, bool) {
	if o == nil || isNil(o.VenueHoldingOrder) {
    return nil, false
	}
	return o.VenueHoldingOrder, true
}

// HasVenueHoldingOrder returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasVenueHoldingOrder() bool {
	if o != nil && !isNil(o.VenueHoldingOrder) {
		return true
	}

	return false
}

// SetVenueHoldingOrder gets a reference to the given string and assigns it to the VenueHoldingOrder field.
func (o *StrategyOrderPlaceOrdersInner) SetVenueHoldingOrder(v string) {
	o.VenueHoldingOrder = &v
}

// GetComissionCharged returns the ComissionCharged field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetComissionCharged() int32 {
	if o == nil || isNil(o.ComissionCharged) {
		var ret int32
		return ret
	}
	return *o.ComissionCharged
}

// GetComissionChargedOk returns a tuple with the ComissionCharged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetComissionChargedOk() (*int32, bool) {
	if o == nil || isNil(o.ComissionCharged) {
    return nil, false
	}
	return o.ComissionCharged, true
}

// HasComissionCharged returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasComissionCharged() bool {
	if o != nil && !isNil(o.ComissionCharged) {
		return true
	}

	return false
}

// SetComissionCharged gets a reference to the given int32 and assigns it to the ComissionCharged field.
func (o *StrategyOrderPlaceOrdersInner) SetComissionCharged(v int32) {
	o.ComissionCharged = &v
}

// GetExchangeOrderId returns the ExchangeOrderId field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetExchangeOrderId() string {
	if o == nil || isNil(o.ExchangeOrderId) {
		var ret string
		return ret
	}
	return *o.ExchangeOrderId
}

// GetExchangeOrderIdOk returns a tuple with the ExchangeOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetExchangeOrderIdOk() (*string, bool) {
	if o == nil || isNil(o.ExchangeOrderId) {
    return nil, false
	}
	return o.ExchangeOrderId, true
}

// HasExchangeOrderId returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasExchangeOrderId() bool {
	if o != nil && !isNil(o.ExchangeOrderId) {
		return true
	}

	return false
}

// SetExchangeOrderId gets a reference to the given string and assigns it to the ExchangeOrderId field.
func (o *StrategyOrderPlaceOrdersInner) SetExchangeOrderId(v string) {
	o.ExchangeOrderId = &v
}

// GetIsSignificantShareHolder returns the IsSignificantShareHolder field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetIsSignificantShareHolder() bool {
	if o == nil || isNil(o.IsSignificantShareHolder) {
		var ret bool
		return ret
	}
	return *o.IsSignificantShareHolder
}

// GetIsSignificantShareHolderOk returns a tuple with the IsSignificantShareHolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetIsSignificantShareHolderOk() (*bool, bool) {
	if o == nil || isNil(o.IsSignificantShareHolder) {
    return nil, false
	}
	return o.IsSignificantShareHolder, true
}

// HasIsSignificantShareHolder returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasIsSignificantShareHolder() bool {
	if o != nil && !isNil(o.IsSignificantShareHolder) {
		return true
	}

	return false
}

// SetIsSignificantShareHolder gets a reference to the given bool and assigns it to the IsSignificantShareHolder field.
func (o *StrategyOrderPlaceOrdersInner) SetIsSignificantShareHolder(v bool) {
	o.IsSignificantShareHolder = &v
}

// GetIsInsider returns the IsInsider field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetIsInsider() bool {
	if o == nil || isNil(o.IsInsider) {
		var ret bool
		return ret
	}
	return *o.IsInsider
}

// GetIsInsiderOk returns a tuple with the IsInsider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetIsInsiderOk() (*bool, bool) {
	if o == nil || isNil(o.IsInsider) {
    return nil, false
	}
	return o.IsInsider, true
}

// HasIsInsider returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasIsInsider() bool {
	if o != nil && !isNil(o.IsInsider) {
		return true
	}

	return false
}

// SetIsInsider gets a reference to the given bool and assigns it to the IsInsider field.
func (o *StrategyOrderPlaceOrdersInner) SetIsInsider(v bool) {
	o.IsInsider = &v
}

// GetIsLimitOffsetInDollar returns the IsLimitOffsetInDollar field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetIsLimitOffsetInDollar() bool {
	if o == nil || isNil(o.IsLimitOffsetInDollar) {
		var ret bool
		return ret
	}
	return *o.IsLimitOffsetInDollar
}

// GetIsLimitOffsetInDollarOk returns a tuple with the IsLimitOffsetInDollar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetIsLimitOffsetInDollarOk() (*bool, bool) {
	if o == nil || isNil(o.IsLimitOffsetInDollar) {
    return nil, false
	}
	return o.IsLimitOffsetInDollar, true
}

// HasIsLimitOffsetInDollar returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasIsLimitOffsetInDollar() bool {
	if o != nil && !isNil(o.IsLimitOffsetInDollar) {
		return true
	}

	return false
}

// SetIsLimitOffsetInDollar gets a reference to the given bool and assigns it to the IsLimitOffsetInDollar field.
func (o *StrategyOrderPlaceOrdersInner) SetIsLimitOffsetInDollar(v bool) {
	o.IsLimitOffsetInDollar = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetUserId() int32 {
	if o == nil || isNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetUserIdOk() (*int32, bool) {
	if o == nil || isNil(o.UserId) {
    return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasUserId() bool {
	if o != nil && !isNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *StrategyOrderPlaceOrdersInner) SetUserId(v int32) {
	o.UserId = &v
}

// GetPlacementCommission returns the PlacementCommission field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetPlacementCommission() string {
	if o == nil || isNil(o.PlacementCommission) {
		var ret string
		return ret
	}
	return *o.PlacementCommission
}

// GetPlacementCommissionOk returns a tuple with the PlacementCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetPlacementCommissionOk() (*string, bool) {
	if o == nil || isNil(o.PlacementCommission) {
    return nil, false
	}
	return o.PlacementCommission, true
}

// HasPlacementCommission returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasPlacementCommission() bool {
	if o != nil && !isNil(o.PlacementCommission) {
		return true
	}

	return false
}

// SetPlacementCommission gets a reference to the given string and assigns it to the PlacementCommission field.
func (o *StrategyOrderPlaceOrdersInner) SetPlacementCommission(v string) {
	o.PlacementCommission = &v
}

// GetLegs returns the Legs field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetLegs() []StrategyOrderPlaceOrdersInnerLegsInner {
	if o == nil || isNil(o.Legs) {
		var ret []StrategyOrderPlaceOrdersInnerLegsInner
		return ret
	}
	return o.Legs
}

// GetLegsOk returns a tuple with the Legs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetLegsOk() ([]StrategyOrderPlaceOrdersInnerLegsInner, bool) {
	if o == nil || isNil(o.Legs) {
    return nil, false
	}
	return o.Legs, true
}

// HasLegs returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasLegs() bool {
	if o != nil && !isNil(o.Legs) {
		return true
	}

	return false
}

// SetLegs gets a reference to the given []StrategyOrderPlaceOrdersInnerLegsInner and assigns it to the Legs field.
func (o *StrategyOrderPlaceOrdersInner) SetLegs(v []StrategyOrderPlaceOrdersInnerLegsInner) {
	o.Legs = v
}

// GetStrategyType returns the StrategyType field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetStrategyType() string {
	if o == nil || isNil(o.StrategyType) {
		var ret string
		return ret
	}
	return *o.StrategyType
}

// GetStrategyTypeOk returns a tuple with the StrategyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetStrategyTypeOk() (*string, bool) {
	if o == nil || isNil(o.StrategyType) {
    return nil, false
	}
	return o.StrategyType, true
}

// HasStrategyType returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasStrategyType() bool {
	if o != nil && !isNil(o.StrategyType) {
		return true
	}

	return false
}

// SetStrategyType gets a reference to the given string and assigns it to the StrategyType field.
func (o *StrategyOrderPlaceOrdersInner) SetStrategyType(v string) {
	o.StrategyType = &v
}

// GetTriggerStopPrice returns the TriggerStopPrice field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetTriggerStopPrice() string {
	if o == nil || isNil(o.TriggerStopPrice) {
		var ret string
		return ret
	}
	return *o.TriggerStopPrice
}

// GetTriggerStopPriceOk returns a tuple with the TriggerStopPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetTriggerStopPriceOk() (*string, bool) {
	if o == nil || isNil(o.TriggerStopPrice) {
    return nil, false
	}
	return o.TriggerStopPrice, true
}

// HasTriggerStopPrice returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasTriggerStopPrice() bool {
	if o != nil && !isNil(o.TriggerStopPrice) {
		return true
	}

	return false
}

// SetTriggerStopPrice gets a reference to the given string and assigns it to the TriggerStopPrice field.
func (o *StrategyOrderPlaceOrdersInner) SetTriggerStopPrice(v string) {
	o.TriggerStopPrice = &v
}

// GetOrderGroupId returns the OrderGroupId field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetOrderGroupId() int32 {
	if o == nil || isNil(o.OrderGroupId) {
		var ret int32
		return ret
	}
	return *o.OrderGroupId
}

// GetOrderGroupIdOk returns a tuple with the OrderGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetOrderGroupIdOk() (*int32, bool) {
	if o == nil || isNil(o.OrderGroupId) {
    return nil, false
	}
	return o.OrderGroupId, true
}

// HasOrderGroupId returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasOrderGroupId() bool {
	if o != nil && !isNil(o.OrderGroupId) {
		return true
	}

	return false
}

// SetOrderGroupId gets a reference to the given int32 and assigns it to the OrderGroupId field.
func (o *StrategyOrderPlaceOrdersInner) SetOrderGroupId(v int32) {
	o.OrderGroupId = &v
}

// GetOrderClass returns the OrderClass field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetOrderClass() string {
	if o == nil || isNil(o.OrderClass) {
		var ret string
		return ret
	}
	return *o.OrderClass
}

// GetOrderClassOk returns a tuple with the OrderClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetOrderClassOk() (*string, bool) {
	if o == nil || isNil(o.OrderClass) {
    return nil, false
	}
	return o.OrderClass, true
}

// HasOrderClass returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasOrderClass() bool {
	if o != nil && !isNil(o.OrderClass) {
		return true
	}

	return false
}

// SetOrderClass gets a reference to the given string and assigns it to the OrderClass field.
func (o *StrategyOrderPlaceOrdersInner) SetOrderClass(v string) {
	o.OrderClass = &v
}

// GetIsCrossZero returns the IsCrossZero field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInner) GetIsCrossZero() bool {
	if o == nil || isNil(o.IsCrossZero) {
		var ret bool
		return ret
	}
	return *o.IsCrossZero
}

// GetIsCrossZeroOk returns a tuple with the IsCrossZero field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInner) GetIsCrossZeroOk() (*bool, bool) {
	if o == nil || isNil(o.IsCrossZero) {
    return nil, false
	}
	return o.IsCrossZero, true
}

// HasIsCrossZero returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInner) HasIsCrossZero() bool {
	if o != nil && !isNil(o.IsCrossZero) {
		return true
	}

	return false
}

// SetIsCrossZero gets a reference to the given bool and assigns it to the IsCrossZero field.
func (o *StrategyOrderPlaceOrdersInner) SetIsCrossZero(v bool) {
	o.IsCrossZero = &v
}

func (o StrategyOrderPlaceOrdersInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !isNil(o.SymbolId) {
		toSerialize["symbolId"] = o.SymbolId
	}
	if !isNil(o.TotalQuantity) {
		toSerialize["totalQuantity"] = o.TotalQuantity
	}
	if !isNil(o.OpenQuantity) {
		toSerialize["openQuantity"] = o.OpenQuantity
	}
	if !isNil(o.FilledQuantity) {
		toSerialize["filledQuantity"] = o.FilledQuantity
	}
	if !isNil(o.CanceledQuantity) {
		toSerialize["canceledQuantity"] = o.CanceledQuantity
	}
	if !isNil(o.Side) {
		toSerialize["side"] = o.Side
	}
	if !isNil(o.OrderType) {
		toSerialize["orderType"] = o.OrderType
	}
	if !isNil(o.LimitPrice) {
		toSerialize["limitPrice"] = o.LimitPrice
	}
	if !isNil(o.StopPrice) {
		toSerialize["stopPrice"] = o.StopPrice
	}
	if !isNil(o.IsAllOrNone) {
		toSerialize["isAllOrNone"] = o.IsAllOrNone
	}
	if !isNil(o.IsAnonymous) {
		toSerialize["isAnonymous"] = o.IsAnonymous
	}
	if !isNil(o.IcebergQuantity) {
		toSerialize["icebergQuantity"] = o.IcebergQuantity
	}
	if !isNil(o.MinQuantity) {
		toSerialize["minQuantity"] = o.MinQuantity
	}
	if !isNil(o.AvgExecPrice) {
		toSerialize["avgExecPrice"] = o.AvgExecPrice
	}
	if !isNil(o.LastExecPrice) {
		toSerialize["lastExecPrice"] = o.LastExecPrice
	}
	if !isNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !isNil(o.TimeInForce) {
		toSerialize["timeInForce"] = o.TimeInForce
	}
	if !isNil(o.GtdDate) {
		toSerialize["gtdDate"] = o.GtdDate
	}
	if !isNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !isNil(o.RejectionReason) {
		toSerialize["rejectionReason"] = o.RejectionReason
	}
	if !isNil(o.ChainId) {
		toSerialize["chainId"] = o.ChainId
	}
	if !isNil(o.CreationTime) {
		toSerialize["creationTime"] = o.CreationTime
	}
	if !isNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	if !isNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !isNil(o.PrimaryRoute) {
		toSerialize["primaryRoute"] = o.PrimaryRoute
	}
	if !isNil(o.SecondaryRoute) {
		toSerialize["secondaryRoute"] = o.SecondaryRoute
	}
	if !isNil(o.OrderRoute) {
		toSerialize["orderRoute"] = o.OrderRoute
	}
	if !isNil(o.VenueHoldingOrder) {
		toSerialize["venueHoldingOrder"] = o.VenueHoldingOrder
	}
	if !isNil(o.ComissionCharged) {
		toSerialize["comissionCharged"] = o.ComissionCharged
	}
	if !isNil(o.ExchangeOrderId) {
		toSerialize["exchangeOrderId"] = o.ExchangeOrderId
	}
	if !isNil(o.IsSignificantShareHolder) {
		toSerialize["isSignificantShareHolder"] = o.IsSignificantShareHolder
	}
	if !isNil(o.IsInsider) {
		toSerialize["isInsider"] = o.IsInsider
	}
	if !isNil(o.IsLimitOffsetInDollar) {
		toSerialize["isLimitOffsetInDollar"] = o.IsLimitOffsetInDollar
	}
	if !isNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !isNil(o.PlacementCommission) {
		toSerialize["placementCommission"] = o.PlacementCommission
	}
	if !isNil(o.Legs) {
		toSerialize["legs"] = o.Legs
	}
	if !isNil(o.StrategyType) {
		toSerialize["strategyType"] = o.StrategyType
	}
	if !isNil(o.TriggerStopPrice) {
		toSerialize["triggerStopPrice"] = o.TriggerStopPrice
	}
	if !isNil(o.OrderGroupId) {
		toSerialize["orderGroupId"] = o.OrderGroupId
	}
	if !isNil(o.OrderClass) {
		toSerialize["orderClass"] = o.OrderClass
	}
	if !isNil(o.IsCrossZero) {
		toSerialize["isCrossZero"] = o.IsCrossZero
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *StrategyOrderPlaceOrdersInner) UnmarshalJSON(bytes []byte) (err error) {
	varStrategyOrderPlaceOrdersInner := _StrategyOrderPlaceOrdersInner{}

	if err = json.Unmarshal(bytes, &varStrategyOrderPlaceOrdersInner); err == nil {
		*o = StrategyOrderPlaceOrdersInner(varStrategyOrderPlaceOrdersInner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "symbol")
		delete(additionalProperties, "symbolId")
		delete(additionalProperties, "totalQuantity")
		delete(additionalProperties, "openQuantity")
		delete(additionalProperties, "filledQuantity")
		delete(additionalProperties, "canceledQuantity")
		delete(additionalProperties, "side")
		delete(additionalProperties, "orderType")
		delete(additionalProperties, "limitPrice")
		delete(additionalProperties, "stopPrice")
		delete(additionalProperties, "isAllOrNone")
		delete(additionalProperties, "isAnonymous")
		delete(additionalProperties, "icebergQuantity")
		delete(additionalProperties, "minQuantity")
		delete(additionalProperties, "avgExecPrice")
		delete(additionalProperties, "lastExecPrice")
		delete(additionalProperties, "source")
		delete(additionalProperties, "timeInForce")
		delete(additionalProperties, "gtdDate")
		delete(additionalProperties, "state")
		delete(additionalProperties, "rejectionReason")
		delete(additionalProperties, "chainId")
		delete(additionalProperties, "creationTime")
		delete(additionalProperties, "updateTime")
		delete(additionalProperties, "notes")
		delete(additionalProperties, "primaryRoute")
		delete(additionalProperties, "secondaryRoute")
		delete(additionalProperties, "orderRoute")
		delete(additionalProperties, "venueHoldingOrder")
		delete(additionalProperties, "comissionCharged")
		delete(additionalProperties, "exchangeOrderId")
		delete(additionalProperties, "isSignificantShareHolder")
		delete(additionalProperties, "isInsider")
		delete(additionalProperties, "isLimitOffsetInDollar")
		delete(additionalProperties, "userId")
		delete(additionalProperties, "placementCommission")
		delete(additionalProperties, "legs")
		delete(additionalProperties, "strategyType")
		delete(additionalProperties, "triggerStopPrice")
		delete(additionalProperties, "orderGroupId")
		delete(additionalProperties, "orderClass")
		delete(additionalProperties, "isCrossZero")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStrategyOrderPlaceOrdersInner struct {
	value *StrategyOrderPlaceOrdersInner
	isSet bool
}

func (v NullableStrategyOrderPlaceOrdersInner) Get() *StrategyOrderPlaceOrdersInner {
	return v.value
}

func (v *NullableStrategyOrderPlaceOrdersInner) Set(val *StrategyOrderPlaceOrdersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableStrategyOrderPlaceOrdersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableStrategyOrderPlaceOrdersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStrategyOrderPlaceOrdersInner(val *StrategyOrderPlaceOrdersInner) *NullableStrategyOrderPlaceOrdersInner {
	return &NullableStrategyOrderPlaceOrdersInner{value: val, isSet: true}
}

func (v NullableStrategyOrderPlaceOrdersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStrategyOrderPlaceOrdersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


