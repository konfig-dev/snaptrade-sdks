/*
SnapTrade

Connect brokerage accounts to your app for live positions and trading

API version: 1.0.0
Contact: api@snaptrade.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package snaptrade

import (
	"encoding/json"
)

// StrategyOrderPlaceOrdersInnerLegsInner struct for StrategyOrderPlaceOrdersInnerLegsInner
type StrategyOrderPlaceOrdersInnerLegsInner struct {
	LegId *int32 `json:"legId,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	SymbolId *int32 `json:"symbolId,omitempty"`
	LegRatioQuantity *int32 `json:"legRatioQuantity,omitempty"`
	Side *string `json:"side,omitempty"`
	AvgExecPrice *int32 `json:"avgExecPrice,omitempty"`
	LastExecPrice *string `json:"lastExecPrice,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StrategyOrderPlaceOrdersInnerLegsInner StrategyOrderPlaceOrdersInnerLegsInner

// NewStrategyOrderPlaceOrdersInnerLegsInner instantiates a new StrategyOrderPlaceOrdersInnerLegsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStrategyOrderPlaceOrdersInnerLegsInner() *StrategyOrderPlaceOrdersInnerLegsInner {
	this := StrategyOrderPlaceOrdersInnerLegsInner{}
	return &this
}

// NewStrategyOrderPlaceOrdersInnerLegsInnerWithDefaults instantiates a new StrategyOrderPlaceOrdersInnerLegsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStrategyOrderPlaceOrdersInnerLegsInnerWithDefaults() *StrategyOrderPlaceOrdersInnerLegsInner {
	this := StrategyOrderPlaceOrdersInnerLegsInner{}
	return &this
}

// GetLegId returns the LegId field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetLegId() int32 {
	if o == nil || isNil(o.LegId) {
		var ret int32
		return ret
	}
	return *o.LegId
}

// GetLegIdOk returns a tuple with the LegId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetLegIdOk() (*int32, bool) {
	if o == nil || isNil(o.LegId) {
    return nil, false
	}
	return o.LegId, true
}

// HasLegId returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) HasLegId() bool {
	if o != nil && !isNil(o.LegId) {
		return true
	}

	return false
}

// SetLegId gets a reference to the given int32 and assigns it to the LegId field.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) SetLegId(v int32) {
	o.LegId = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetSymbol() string {
	if o == nil || isNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetSymbolOk() (*string, bool) {
	if o == nil || isNil(o.Symbol) {
    return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) HasSymbol() bool {
	if o != nil && !isNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) SetSymbol(v string) {
	o.Symbol = &v
}

// GetSymbolId returns the SymbolId field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetSymbolId() int32 {
	if o == nil || isNil(o.SymbolId) {
		var ret int32
		return ret
	}
	return *o.SymbolId
}

// GetSymbolIdOk returns a tuple with the SymbolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetSymbolIdOk() (*int32, bool) {
	if o == nil || isNil(o.SymbolId) {
    return nil, false
	}
	return o.SymbolId, true
}

// HasSymbolId returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) HasSymbolId() bool {
	if o != nil && !isNil(o.SymbolId) {
		return true
	}

	return false
}

// SetSymbolId gets a reference to the given int32 and assigns it to the SymbolId field.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) SetSymbolId(v int32) {
	o.SymbolId = &v
}

// GetLegRatioQuantity returns the LegRatioQuantity field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetLegRatioQuantity() int32 {
	if o == nil || isNil(o.LegRatioQuantity) {
		var ret int32
		return ret
	}
	return *o.LegRatioQuantity
}

// GetLegRatioQuantityOk returns a tuple with the LegRatioQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetLegRatioQuantityOk() (*int32, bool) {
	if o == nil || isNil(o.LegRatioQuantity) {
    return nil, false
	}
	return o.LegRatioQuantity, true
}

// HasLegRatioQuantity returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) HasLegRatioQuantity() bool {
	if o != nil && !isNil(o.LegRatioQuantity) {
		return true
	}

	return false
}

// SetLegRatioQuantity gets a reference to the given int32 and assigns it to the LegRatioQuantity field.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) SetLegRatioQuantity(v int32) {
	o.LegRatioQuantity = &v
}

// GetSide returns the Side field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetSide() string {
	if o == nil || isNil(o.Side) {
		var ret string
		return ret
	}
	return *o.Side
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetSideOk() (*string, bool) {
	if o == nil || isNil(o.Side) {
    return nil, false
	}
	return o.Side, true
}

// HasSide returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) HasSide() bool {
	if o != nil && !isNil(o.Side) {
		return true
	}

	return false
}

// SetSide gets a reference to the given string and assigns it to the Side field.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) SetSide(v string) {
	o.Side = &v
}

// GetAvgExecPrice returns the AvgExecPrice field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetAvgExecPrice() int32 {
	if o == nil || isNil(o.AvgExecPrice) {
		var ret int32
		return ret
	}
	return *o.AvgExecPrice
}

// GetAvgExecPriceOk returns a tuple with the AvgExecPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetAvgExecPriceOk() (*int32, bool) {
	if o == nil || isNil(o.AvgExecPrice) {
    return nil, false
	}
	return o.AvgExecPrice, true
}

// HasAvgExecPrice returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) HasAvgExecPrice() bool {
	if o != nil && !isNil(o.AvgExecPrice) {
		return true
	}

	return false
}

// SetAvgExecPrice gets a reference to the given int32 and assigns it to the AvgExecPrice field.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) SetAvgExecPrice(v int32) {
	o.AvgExecPrice = &v
}

// GetLastExecPrice returns the LastExecPrice field value if set, zero value otherwise.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetLastExecPrice() string {
	if o == nil || isNil(o.LastExecPrice) {
		var ret string
		return ret
	}
	return *o.LastExecPrice
}

// GetLastExecPriceOk returns a tuple with the LastExecPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) GetLastExecPriceOk() (*string, bool) {
	if o == nil || isNil(o.LastExecPrice) {
    return nil, false
	}
	return o.LastExecPrice, true
}

// HasLastExecPrice returns a boolean if a field has been set.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) HasLastExecPrice() bool {
	if o != nil && !isNil(o.LastExecPrice) {
		return true
	}

	return false
}

// SetLastExecPrice gets a reference to the given string and assigns it to the LastExecPrice field.
func (o *StrategyOrderPlaceOrdersInnerLegsInner) SetLastExecPrice(v string) {
	o.LastExecPrice = &v
}

func (o StrategyOrderPlaceOrdersInnerLegsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.LegId) {
		toSerialize["legId"] = o.LegId
	}
	if !isNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !isNil(o.SymbolId) {
		toSerialize["symbolId"] = o.SymbolId
	}
	if !isNil(o.LegRatioQuantity) {
		toSerialize["legRatioQuantity"] = o.LegRatioQuantity
	}
	if !isNil(o.Side) {
		toSerialize["side"] = o.Side
	}
	if !isNil(o.AvgExecPrice) {
		toSerialize["avgExecPrice"] = o.AvgExecPrice
	}
	if !isNil(o.LastExecPrice) {
		toSerialize["lastExecPrice"] = o.LastExecPrice
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *StrategyOrderPlaceOrdersInnerLegsInner) UnmarshalJSON(bytes []byte) (err error) {
	varStrategyOrderPlaceOrdersInnerLegsInner := _StrategyOrderPlaceOrdersInnerLegsInner{}

	if err = json.Unmarshal(bytes, &varStrategyOrderPlaceOrdersInnerLegsInner); err == nil {
		*o = StrategyOrderPlaceOrdersInnerLegsInner(varStrategyOrderPlaceOrdersInnerLegsInner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "legId")
		delete(additionalProperties, "symbol")
		delete(additionalProperties, "symbolId")
		delete(additionalProperties, "legRatioQuantity")
		delete(additionalProperties, "side")
		delete(additionalProperties, "avgExecPrice")
		delete(additionalProperties, "lastExecPrice")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStrategyOrderPlaceOrdersInnerLegsInner struct {
	value *StrategyOrderPlaceOrdersInnerLegsInner
	isSet bool
}

func (v NullableStrategyOrderPlaceOrdersInnerLegsInner) Get() *StrategyOrderPlaceOrdersInnerLegsInner {
	return v.value
}

func (v *NullableStrategyOrderPlaceOrdersInnerLegsInner) Set(val *StrategyOrderPlaceOrdersInnerLegsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableStrategyOrderPlaceOrdersInnerLegsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableStrategyOrderPlaceOrdersInnerLegsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStrategyOrderPlaceOrdersInnerLegsInner(val *StrategyOrderPlaceOrdersInnerLegsInner) *NullableStrategyOrderPlaceOrdersInnerLegsInner {
	return &NullableStrategyOrderPlaceOrdersInnerLegsInner{value: val, isSet: true}
}

func (v NullableStrategyOrderPlaceOrdersInnerLegsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStrategyOrderPlaceOrdersInnerLegsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


