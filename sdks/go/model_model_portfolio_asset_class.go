/*
SnapTrade

Connect brokerage accounts to your app for live positions and trading

API version: 1.0.0
Contact: api@snaptrade.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package snaptrade

import (
	"encoding/json"
)

// ModelPortfolioAssetClass struct for ModelPortfolioAssetClass
type ModelPortfolioAssetClass struct {
	ModelAssetClass *ModelAssetClass `json:"model_asset_class,omitempty"`
	Percent *int32 `json:"percent,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelPortfolioAssetClass ModelPortfolioAssetClass

// NewModelPortfolioAssetClass instantiates a new ModelPortfolioAssetClass object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelPortfolioAssetClass() *ModelPortfolioAssetClass {
	this := ModelPortfolioAssetClass{}
	return &this
}

// NewModelPortfolioAssetClassWithDefaults instantiates a new ModelPortfolioAssetClass object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelPortfolioAssetClassWithDefaults() *ModelPortfolioAssetClass {
	this := ModelPortfolioAssetClass{}
	return &this
}

// GetModelAssetClass returns the ModelAssetClass field value if set, zero value otherwise.
func (o *ModelPortfolioAssetClass) GetModelAssetClass() ModelAssetClass {
	if o == nil || isNil(o.ModelAssetClass) {
		var ret ModelAssetClass
		return ret
	}
	return *o.ModelAssetClass
}

// GetModelAssetClassOk returns a tuple with the ModelAssetClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPortfolioAssetClass) GetModelAssetClassOk() (*ModelAssetClass, bool) {
	if o == nil || isNil(o.ModelAssetClass) {
    return nil, false
	}
	return o.ModelAssetClass, true
}

// HasModelAssetClass returns a boolean if a field has been set.
func (o *ModelPortfolioAssetClass) HasModelAssetClass() bool {
	if o != nil && !isNil(o.ModelAssetClass) {
		return true
	}

	return false
}

// SetModelAssetClass gets a reference to the given ModelAssetClass and assigns it to the ModelAssetClass field.
func (o *ModelPortfolioAssetClass) SetModelAssetClass(v ModelAssetClass) {
	o.ModelAssetClass = &v
}

// GetPercent returns the Percent field value if set, zero value otherwise.
func (o *ModelPortfolioAssetClass) GetPercent() int32 {
	if o == nil || isNil(o.Percent) {
		var ret int32
		return ret
	}
	return *o.Percent
}

// GetPercentOk returns a tuple with the Percent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPortfolioAssetClass) GetPercentOk() (*int32, bool) {
	if o == nil || isNil(o.Percent) {
    return nil, false
	}
	return o.Percent, true
}

// HasPercent returns a boolean if a field has been set.
func (o *ModelPortfolioAssetClass) HasPercent() bool {
	if o != nil && !isNil(o.Percent) {
		return true
	}

	return false
}

// SetPercent gets a reference to the given int32 and assigns it to the Percent field.
func (o *ModelPortfolioAssetClass) SetPercent(v int32) {
	o.Percent = &v
}

func (o ModelPortfolioAssetClass) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ModelAssetClass) {
		toSerialize["model_asset_class"] = o.ModelAssetClass
	}
	if !isNil(o.Percent) {
		toSerialize["percent"] = o.Percent
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ModelPortfolioAssetClass) UnmarshalJSON(bytes []byte) (err error) {
	varModelPortfolioAssetClass := _ModelPortfolioAssetClass{}

	if err = json.Unmarshal(bytes, &varModelPortfolioAssetClass); err == nil {
		*o = ModelPortfolioAssetClass(varModelPortfolioAssetClass)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "model_asset_class")
		delete(additionalProperties, "percent")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelPortfolioAssetClass struct {
	value *ModelPortfolioAssetClass
	isSet bool
}

func (v NullableModelPortfolioAssetClass) Get() *ModelPortfolioAssetClass {
	return v.value
}

func (v *NullableModelPortfolioAssetClass) Set(val *ModelPortfolioAssetClass) {
	v.value = val
	v.isSet = true
}

func (v NullableModelPortfolioAssetClass) IsSet() bool {
	return v.isSet
}

func (v *NullableModelPortfolioAssetClass) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelPortfolioAssetClass(val *ModelPortfolioAssetClass) *NullableModelPortfolioAssetClass {
	return &NullableModelPortfolioAssetClass{value: val, isSet: true}
}

func (v NullableModelPortfolioAssetClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelPortfolioAssetClass) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


