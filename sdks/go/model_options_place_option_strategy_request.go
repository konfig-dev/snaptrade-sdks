/*
SnapTrade

Connect brokerage accounts to your app for live positions and trading

API version: 1.0.0
Contact: api@snaptrade.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package snaptrade

import (
	"encoding/json"
)

// OptionsPlaceOptionStrategyRequest struct for OptionsPlaceOptionStrategyRequest
type OptionsPlaceOptionStrategyRequest struct {
	OrderType OrderTypeStrict `json:"order_type"`
	TimeInForce TimeInForceStrict `json:"time_in_force"`
	// Trade Price if limit or stop limit order
	Price NullableFloat32 `json:"price,omitempty"`
}

// NewOptionsPlaceOptionStrategyRequest instantiates a new OptionsPlaceOptionStrategyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionsPlaceOptionStrategyRequest(orderType OrderTypeStrict, timeInForce TimeInForceStrict) *OptionsPlaceOptionStrategyRequest {
	this := OptionsPlaceOptionStrategyRequest{}
	this.OrderType = orderType
	this.TimeInForce = timeInForce
	return &this
}

// NewOptionsPlaceOptionStrategyRequestWithDefaults instantiates a new OptionsPlaceOptionStrategyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionsPlaceOptionStrategyRequestWithDefaults() *OptionsPlaceOptionStrategyRequest {
	this := OptionsPlaceOptionStrategyRequest{}
	return &this
}

// GetOrderType returns the OrderType field value
func (o *OptionsPlaceOptionStrategyRequest) GetOrderType() OrderTypeStrict {
	if o == nil {
		var ret OrderTypeStrict
		return ret
	}

	return o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value
// and a boolean to check if the value has been set.
func (o *OptionsPlaceOptionStrategyRequest) GetOrderTypeOk() (*OrderTypeStrict, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OrderType, true
}

// SetOrderType sets field value
func (o *OptionsPlaceOptionStrategyRequest) SetOrderType(v OrderTypeStrict) {
	o.OrderType = v
}

// GetTimeInForce returns the TimeInForce field value
func (o *OptionsPlaceOptionStrategyRequest) GetTimeInForce() TimeInForceStrict {
	if o == nil {
		var ret TimeInForceStrict
		return ret
	}

	return o.TimeInForce
}

// GetTimeInForceOk returns a tuple with the TimeInForce field value
// and a boolean to check if the value has been set.
func (o *OptionsPlaceOptionStrategyRequest) GetTimeInForceOk() (*TimeInForceStrict, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TimeInForce, true
}

// SetTimeInForce sets field value
func (o *OptionsPlaceOptionStrategyRequest) SetTimeInForce(v TimeInForceStrict) {
	o.TimeInForce = v
}

// GetPrice returns the Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OptionsPlaceOptionStrategyRequest) GetPrice() float32 {
	if o == nil || isNil(o.Price.Get()) {
		var ret float32
		return ret
	}
	return *o.Price.Get()
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OptionsPlaceOptionStrategyRequest) GetPriceOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return o.Price.Get(), o.Price.IsSet()
}

// HasPrice returns a boolean if a field has been set.
func (o *OptionsPlaceOptionStrategyRequest) HasPrice() bool {
	if o != nil && o.Price.IsSet() {
		return true
	}

	return false
}

// SetPrice gets a reference to the given NullableFloat32 and assigns it to the Price field.
func (o *OptionsPlaceOptionStrategyRequest) SetPrice(v float32) {
	o.Price.Set(&v)
}
// SetPriceNil sets the value for Price to be an explicit nil
func (o *OptionsPlaceOptionStrategyRequest) SetPriceNil() {
	o.Price.Set(nil)
}

// UnsetPrice ensures that no value is present for Price, not even an explicit nil
func (o *OptionsPlaceOptionStrategyRequest) UnsetPrice() {
	o.Price.Unset()
}

func (o OptionsPlaceOptionStrategyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["order_type"] = o.OrderType
	}
	if true {
		toSerialize["time_in_force"] = o.TimeInForce
	}
	if o.Price.IsSet() {
		toSerialize["price"] = o.Price.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOptionsPlaceOptionStrategyRequest struct {
	value *OptionsPlaceOptionStrategyRequest
	isSet bool
}

func (v NullableOptionsPlaceOptionStrategyRequest) Get() *OptionsPlaceOptionStrategyRequest {
	return v.value
}

func (v *NullableOptionsPlaceOptionStrategyRequest) Set(val *OptionsPlaceOptionStrategyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionsPlaceOptionStrategyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionsPlaceOptionStrategyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionsPlaceOptionStrategyRequest(val *OptionsPlaceOptionStrategyRequest) *NullableOptionsPlaceOptionStrategyRequest {
	return &NullableOptionsPlaceOptionStrategyRequest{value: val, isSet: true}
}

func (v NullableOptionsPlaceOptionStrategyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionsPlaceOptionStrategyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


